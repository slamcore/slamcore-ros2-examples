bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /slamcore/odom
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_distance_traveled_condition_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 6.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_checker_plugin: "progress_checker"
    goal_checker_plugin: "goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    # Goal checker parameters
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      stateful: True
    # DWB parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.20
      max_vel_y: 0.0
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 0.20
      min_speed_theta: 0.0
      acc_lim_x: 1.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.5
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics:
        [
          "RotateToGoal",
          "Oscillation",
          "BaseObstacle",
          "GoalAlign",
          "PathAlign",
          "PathDist",
          "GoalDist",
        ]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 4.0
      publish_frequency: 4.0
      global_frame: odom
      robot_base_frame: base_footprint
      use_sim_time: False
      rolling_window: True
      width: 3
      height: 3
      resolution: 0.05
      robot_radius: 0.18
      plugins: ["npvl_voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 1.0
      npvl_voxel_layer:
        plugin: nav2_costmap_2d/NonPersistentVoxelLayer
        enabled: true
        track_unknown_space: True
        max_obstacle_height: 0.10
        unknown_threshold: 15
        mark_threshold: 2
        combination_method: 1
        obstacle_range: 3.0
        origin_z: 0.
        z_resolution: 0.05
        z_voxels: 16
        publish_voxel_map: True
        observation_sources: slamcore_pointcloud bumper_pointcloud
        slamcore_pointcloud:
          topic: /slamcore/local_point_cloud
          observation_persistence: 1.0
          max_obstacle_height: 0.10
          data_type: "PointCloud2"
          clearing: True
          marking: True
          min_obstacle_height: -0.18
        bumper_pointcloud:
          topic: /bumper_pointcloud
          observation_persistence: 2.0
          data_type: "PointCloud2"
          clearing: False
          marking: True
          min_obstacle_height: -0.18
      static_layer:
        # Always false in order to navigate with or without a session_file
        map_subscribe_transient_local: False
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 5.0
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: False
      robot_radius: 0.18
      resolution: 0.05
      track_unknown_space: True
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        # For parameters see:
        # https://github.com/ros-planning/navigation2/blob/main/nav2_costmap_2d/plugins/obstacle_layer.cpp
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: slamcore_pointcloud bumper_pointcloud
        slamcore_pointcloud:
          topic: /slamcore/local_point_cloud
          max_obstacle_height: 0.10
          data_type: "PointCloud2"
          clearing: True
          marking: True
          min_obstacle_height: -0.18
        bumper_pointcloud:
          topic: /bumper_pointcloud
          observation_persistence: 2.0
          data_type: "PointCloud2"
          clearing: False
          marking: True
          min_obstacle_height: -0.18
      static_layer:
        # For parameters see:
        # https://github.com/ros-planning/navigation2/blob/main/nav2_costmap_2d/plugins/static_layer.cpp#L123
        plugin: "nav2_costmap_2d::StaticLayer"
        # Always false in order to navigate with and without a session_file
        map_subscribe_transient_local: False
        map_topic: /slamcore/map
      inflation_layer:
        # For parameters see:
        # https://github.com/ros-planning/navigation2/blob/main/nav2_costmap_2d/plugins/inflation_layer.cpp#L86
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 8.0
        inflation_radius: 1.1
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: False
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

planner_server:
  ros__parameters:
    expected_planner_frequency: 6.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: False
      # this is unreliable, it would start planning through walls
      allow_unknown: False

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 6.0
    recovery_plugins: ["spin", "wait", "back_up"]
    spin:
      plugin: "nav2_recoveries/Spin"
    back_up:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: odom
    robot_base_frame: base_footprint
    transform_timeout: 0.1
    use_sim_time: False
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

slamcore_camera_to_robot_base_transform:
  ros__parameters:
    parent_frame: slamcore/base_link
    child_frame: base_footprint
    xyz: [0.018249683294225896, 0.233239134195596, -0.09784809475377587]
    rpy: [0.000, -1.571, 1.571]

kobuki_ros_node:
  ros__parameters:
    acceleration_limiter: True
    odom_frame: odom
    base_frame: base_link
    publish_tf: False
    use_imu_heading: True

kobuki_keyop_node:
  ros__parameters:
    linear_vel_step: 0.05
    angular_vel_step: 0.3

kobuki_safety_controller_node:
  ros__parameters:
    time_to_extend_bump_cliff_events: 2.5

kobuki_bumper2pc_node:
  ros__parameters:
    pointcloud_radius: 0.25
    pointcloud_height: 0.04
    side_point_angle: 0.34906585
    base_link_frame: base_link

cmd_vel_mux_node:
  ros__parameters:
    subscribers:
        safety_controller:
          topic:       "input/safety_controller"
          timeout:     0.1
          priority:    10
          short_desc:  "Safety Controller for stopping and reversing when bumping into things"
        joystick_teleop:
          topic:       "input/joy"
          timeout:     0.1
          priority:    6
          short_desc:  "Joystick Teleoperation"
        keyboard_teleop:
          topic:       "input/keyop"
          timeout:     0.1
          priority:    5
          short_desc:  "Keyboard Teleoperation"
        nav2_stack:
          topic:       "input/navigation"
          timeout:     0.5
          priority:    1
          short_desc:  "Nav2 Stack Autonomous Controller"
        default_input:
          topic:       "input/default"
          timeout:     0.1
          priority:    0
          short_desc:  "The default cmd_vel (usually the zero command) should come on this stream"
