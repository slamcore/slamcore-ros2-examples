# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v3.2.0"
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-merge-conflict
      - id: check-yaml
      - id: debug-statements
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace
      # - id: sort-simple-yaml
      - id: pretty-format-json
        args: ["--autofix"]
  - repo: https://github.com/markdownlint/markdownlint
    rev: "v0.11.0"
    hooks:
      - id: markdownlint
        entry: mdl -r ~MD033,~MD013,~MD029
  - repo: local
    hooks:
      - id: black
        name: Black formatter
        description: "Black: The uncompromising Python code formatter"
        entry: black
        language: system
        minimum_pre_commit_version: 2.9.2
        require_serial: true
        types_or: [python, pyi]
      - id: mypy
        name: Mypy check
        entry: mypy
        args: ["--verbose", "--ignore-missing-imports"]
        language: system
        pass_filenames: true
        types_or: [python, pyi]
      - id: pyright
        name: Pyright check
        entry: pyright
        language: system
        pass_filenames: true
        types_or: [python, pyi]
      - id: isort
        name: Isort check
        entry: isort
        language: system
        pass_filenames: true
        types: [python]
      - id: markdown-link-check
        name: Markdown Link Check
        description: Extracts links from markdown texts and checks they're all alive (i.e. return status 200 OK).
        entry: markdown-link-check
        args: ["--verbose", "--config", ".markdown-link-check.json"]
        language: node
        types: [markdown]
        stages: [commit, push, manual]
  - repo: meta
    hooks:
      - id: check-hooks-apply
      - id: check-useless-excludes
